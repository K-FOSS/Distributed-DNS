version: '3.7'
services:
  Web:
    image: abiosoft/caddy
    ports:
      - 80:80
    volumes:
      - './Caddyfile:/etc/Caddyfile'
      - './ACMEDL/data:/SSL'
  api:
    build:
      context: './API'
      dockerfile: 'Dockerfile.dev'
    image: 'applicationtemplate'
    environment:
      DB_HOST: database
      DB_PASSWORD: pgpass
      NODE_ENV: production
    volumes:
      - './API:/development'
      - './API.graphql:/API.graphql'
  web-gen:
    build:
      context: './Scripts/GraphQLCodegen'
      dockerfile: 'Dockerfile'
    image: 'applicationtemplate-gen'
    volumes:
      - './Web:/data'
  acmedl-gen:
    build:
      context: './Scripts/GraphQLCodegen'
      dockerfile: 'Dockerfile'
    image: 'applicationtemplate-gen'
    volumes:
      - './ACMEDL:/data'
  dnsdl-gen:
    build:
      context: './Scripts/GraphQLCodegen'
      dockerfile: 'Dockerfile'
    image: 'applicationtemplate-gen'
    volumes:
      - './DNSDL:/data'
  database:
    image: postgres:11-alpine
    ports:
      - 4763:5432
    volumes:
      - databaseData:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: pgpass
      POSTGRES_DB: application
  NS1:
    image: resystit/bind9:latest
    restart: unless-stopped
    container_name: 'NS'
    ports:
      - 53:53/tcp
      - 53:53/udp
    volumes:
      - 'zoneFiles:/Zones'
      - 'bindConfig:/etc/bind/'
  DNSDL:
    build: './DNSDL'
    image: 'dnsdl'
    environment:
      SUBSCRIBER_TOKEN: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWJzY3JpYmVySWQiOiIwMjdhMTliOS1kZjgwLTQ0NzItOTRlZi01NWM0ZDkzY2U1YjYiLCJpYXQiOjE1NzI0NTIyMTB9.r4MmRGSbdc0-PKIszyBHqDX8k4JJMXMMy2jjKPVXlRU
      API_URL: 'http://api/graphql'
    volumes:
      - 'zoneFiles:/data/Zones'
      - 'bindConfig:/data/BIND'
      - /var/run/docker.sock:/var/run/docker.sock
volumes:
  databaseData:
  zoneFiles:
  bindConfig: