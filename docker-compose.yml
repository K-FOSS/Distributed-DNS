version: '3.7'
services:
  Web:
    image: abiosoft/caddy
    ports:
      - 80:80
    volumes:
      - './Caddyfile:/etc/Caddyfile'
      - './ACMEDL/data:/SSL'
  api:
    build:
      context: './API'
      dockerfile: 'Dockerfile.dev'
    image: 'applicationtemplate'
    environment:
      DB_HOST: database
      DB_PASSWORD: pgpass
      NODE_ENV: development
    volumes:
      - './API:/development'
      - './API.graphql:/API.graphql'
  web-gen:
    build:
      context: './Scripts/GraphQLCodegen'
      dockerfile: 'Dockerfile'
    image: 'applicationtemplate-gen'
    volumes:
      - './Web:/data'

  SubscriberDL-GQLGen:
    build:
      context: './Scripts/GraphQLCodegen'
      dockerfile: 'Dockerfile'
    image: 'applicationtemplate-gen'
    volumes:
      - './SubscriberDL:/data'

  database:
    image: postgres:11-alpine
    ports:
      - 4763:5432
    volumes:
      - databaseData:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: pgpass
      POSTGRES_DB: application

  NS1:
    image: resystit/bind9:latest
    restart: unless-stopped
    container_name: 'NS'
    ports:
      - 53:53/tcp
      - 53:53/udp
      - 55:53/udp
    volumes:
      - ./SubscriberDL/data/Zones:/zones
      - ./SubscriberDL/data/BIND:/etc/bind/
    labels:
      - com.distributed-dns.bind=true

  SubscriberDL:
    build: './SubscriberDL'
    image: 'subscriber-dl'
    environment:
      SUBSCRIBER_TOKEN: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWJzY3JpYmVySWQiOiJmY2NkMzVlZS1jODQyLTRkZWItODg1Mi1iODI2Mjk2N2NjNTYiLCJpYXQiOjE1NzQ3MTg2MTB9.IJSEASiuJOFteJ2F1rXNc6Fu5lETQQ7LGw-6MbqwpUI
      API_URL: 'http://api'
    volumes:
      - zoneFiles:/data/Zones
      - bindConfig:/data/BIND
      - state:/data/State
      - /var/run/docker.sock:/var/run/docker.sock

volumes:
  databaseData:
  zoneFiles:
  bindConfig:
  state:
